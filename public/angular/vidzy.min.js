(function() {

    angular.module('Vidzy', ['ngResource', 'ngRoute']);

    function config($routeProvider) {
        // endpoints are declared here
        $routeProvider
            .when('/', {
                templateUrl: '/home/home.view.html',
                controller: 'homeCtrl',
                controllerAs: 'vm'
            })
            .when('/add-video', {
                templateUrl: '/form/video-form.view.html',
                controller: 'addVideoCtrl',
                controllerAs: 'vm'
            })
            .when('/video/:id', {
                templateUrl: '/form/video-form.view.html',
                controller: 'editVideoCtrl',
                controllerAs: 'vm'
            })
            .when('/video/delete/:id', {
                templateUrl: '/delete/video-delete.view.html',
                controller: 'deleteVideoCtrl',
                controllerAs: 'vm'
            })
            .when('/register', {
                templateUrl: '/auth/register/register.view.html',
                controller: 'registerCtrl',
                controllerAs: 'vm'
            })
            .when('/login', {
                templateUrl: '/auth/login/login.view.html',
                controller: 'loginCtrl',
                controllerAs: 'vm'
            })
            .otherwise({
                redirectTo: '/'
            });
    }

    angular
        .module('Vidzy')
        .config(['$routeProvider', config]);

})();

// controller wrapped in anonymous function
// to isolate the code from global scope

(function() {

    angular
        .module('Vidzy')
        .controller('homeCtrl', homeCtrl);

    homeCtrl.$inject = ['$scope', '$resource', '$location', 'authentication'];

    function homeCtrl($scope, $resource, $location, authentication) {
        var vm = this;

        vm.isLoggedIn = authentication.isLoggedIn();

        vm.logout = function() {
            authentication.logout();
            $location.path('/#/');
        };

        vm.Videos = $resource('/api/videos');
        vm.Videos.query(function(videos) {
            $scope.videos = videos;
        });
    }

})();

(function() {

    angular
        .module('Vidzy')
        .controller('addVideoCtrl', addVideoCtrl);

    addVideoCtrl.$inject = ['$scope', '$resource', '$location', 'authentication'];

    function addVideoCtrl($scope, $resource, $location, authentication) {
        var vm = this;

        vm.isLoggedIn = authentication.isLoggedIn();

        vm.Videos = $resource('/api/videos', null, {
            save: {
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + authentication.getToken()
                }
            }
        });

        $scope.save = function() {
            vm.Videos.save($scope.video, function() {
                $location.path('/#/');
            });
        };
    }

})();

(function() {

    angular
        .module('Vidzy')
        .controller('editVideoCtrl', editVideoCtrl);

    editVideoCtrl.$inject = ['$scope', '$resource', '$location', '$routeParams', 'authentication'];

    function editVideoCtrl($scope, $resource, $location, $routeParams, authentication) {
        var vm = this;

        vm.isLoggedIn = authentication.isLoggedIn();

        vm.Videos = $resource('/api/videos/:id', {
            id: '@_id'
        }, {
            update: {
                method: 'PUT',
                headers: {
                    'Authorization': 'Bearer ' + authentication.getToken()
                }
            }
        });

        vm.Videos.get({
            id: $routeParams.id
        }, function(video) {
            $scope.video = video;
        });

        $scope.save = function() {
            vm.Videos.update($scope.video, function() {
                $location.path('/#/');
            });
        };
    }

})();

(function() {

    angular
        .module('Vidzy')
        .controller('deleteVideoCtrl', deleteVideoCtrl);

    deleteVideoCtrl.$inject = ['$scope', '$resource', '$location', '$routeParams', 'authentication'];

    function deleteVideoCtrl($scope, $resource, $location, $routeParams, authentication) {
        var vm = this;

        vm.Videos = $resource('/api/videos/:id', {
            id: '@_id'
        }, {
            delete: {
                method: 'DELETE',
                headers: {
                    'Authorization': 'Bearer ' + authentication.getToken()
                }
            }
        });

        vm.Videos.get({
            id: $routeParams.id
        }, function(video) {
            $scope.video = video;
        });

        $scope.delete = function() {
            vm.Videos.delete({
                id: $routeParams.id
            }, function(video) {
                $location.path('/#/');
            });
        };
    }

})();

(function() {

    angular
        .module('Vidzy')
        .service('authentication', authentication);

    authentication.$inject = ['$http', '$window'];

    function authentication($http, $window) {

        var saveToken = function(token) {
            $window.localStorage['vidzy-token'] = token;
        };

        var getToken = function() {
            return $window.localStorage['vidzy-token'];
        };

        var isLoggedIn = function() {
            var token = getToken();

            if (token) {
                var payload = JSON.parse($window.atob(token.split('.')[1]));

                return payload.exp > Date.now() / 1000;
            } else {
                return false;
            }
        };

        var currentUser = function() {
            if (isLoggedIn()) {
                var token = getToken();
                var payload = JSON.parse($window.atob(token.split('.')[1]));
                return {
                    email: payload.email,
                    name: payload.name
                };
            }
        };

        register = function(user) {
            return $http.post('/api/register', user).success(function(data) {
                saveToken(data.token);
            });
        };

        login = function(user) {
            return $http.post('/api/login', user).success(function(data) {
                saveToken(data.token);
            });
        };

        logout = function() {
            $window.localStorage.removeItem('vidzy-token');
        };

        return {
            currentUser: currentUser,
            saveToken: saveToken,
            getToken: getToken,
            isLoggedIn: isLoggedIn,
            register: register,
            login: login,
            logout: logout
        };
    }

})();

(function() {

    angular
        .module('Vidzy')
        .controller('registerCtrl', registerCtrl);

    registerCtrl.$inject = ['$location', 'authentication'];

    function registerCtrl($location, authentication) {
        var vm = this;

        vm.pageHeader = {
            title: 'New Vidzy account'
        };

        vm.credentials = {
            name: "",
            email: "",
            password: ""
        };

        vm.returnPage = $location.search().page || '/';

        vm.onSubmit = function() {
            vm.formError = "";
            if (!vm.credentials.name || !vm.credentials.email || !vm.credentials.password) {
                vm.formError = "All fields required, please try again";
                return false;
            } else {
                vm.doRegister();
            }
        };

        vm.doRegister = function() {
            vm.formError = "";
            authentication
                .register(vm.credentials)
                .error(function(err) {
                    vm.formError = err;
                })
                .then(function() {
                    $location.search('page', null);
                    $location.path(vm.returnPage);
                });
        };

    }

})();

(function() {

    angular
        .module('Vidzy')
        .controller('loginCtrl', loginCtrl);

    loginCtrl.$inject = ['$location', 'authentication'];

    function loginCtrl($location, authentication) {
        var vm = this;

        vm.pageHeader = {
            title: 'Sign in to Vidzy'
        };

        vm.credentials = {
            email: "",
            password: ""
        };

        vm.returnPage = $location.search().page || '/';

        vm.onSubmit = function() {
            vm.formError = "";
            if (!vm.credentials.email || !vm.credentials.password) {
                vm.formError = "All fields required, please try again";
                return false;
            } else {
                vm.doLogin();
            }
        };

        vm.doLogin = function() {
            vm.formError = "";
            authentication
                .login(vm.credentials)
                .error(function(err) {
                    vm.formError = err;
                })
                .then(function() {
                    $location.search('page', null);
                    $location.path(vm.returnPage);
                });
        };

    }

})();
